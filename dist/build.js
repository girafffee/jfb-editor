!function(c){var n={};function l(t){if(n[t])return n[t].exports;var F=n[t]={i:t,l:!1,exports:{}};return c[t].call(F.exports,F,F.exports,l),F.l=!0,F.exports}l.m=c,l.c=n,l.d=function(c,n,t){l.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:t})},l.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},l.t=function(c,n){if(1&n&&(c=l(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var F in c)l.d(t,F,function(n){return c[n]}.bind(null,F));return t},l.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return l.d(n,"a",n),n},l.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},l.p="/dist/",l(l.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"Actions\", function() { return /* binding */ Actions; });\n__webpack_require__.d(__webpack_exports__, \"JetFormEditorRow\", function() { return /* reexport */ JetFormEditorRow; });\n\n// CONCATENATED MODULE: ./src/actions/EditorData.js\nclass EditorData {\n  constructor(type, label) {\n    this.type = type;\n    this.label = label;\n    this.source = {};\n    this.__labels = {};\n    this.__help_messages = {};\n    this.__gateway_attrs = {};\n    this.__messages = {};\n  }\n\n  setSource(config) {\n    this.source = config;\n    return this;\n  }\n\n  setLabels(config) {\n    this.__labels = config;\n    return this;\n  }\n\n  setHelp(config) {\n    this.__help_messages = config;\n    return this;\n  }\n\n  setGatewayAttrs(config) {\n    this.__gateway_attrs = config;\n    return this;\n  }\n\n  setMessages(config) {\n    this.__messages = config;\n    return this;\n  }\n\n  exportAll() {\n    if (!('jetFormActionTypes' in window)) {\n      window.jetFormActionTypes = [];\n    }\n\n    const source = this.source;\n    const label = this.exportLabels();\n    const help = this.exportHelp();\n    const gatewayAttrs = this.exportGatewayAttrs();\n    const messages = this.exportMessages();\n    const exportObj = {\n      source,\n      label,\n      help,\n      messages,\n      gatewayAttrs\n    };\n    const actionIndex = window.jetFormActionTypes.findIndex(type => this.type === type.id);\n    const actionData = {\n      id: this.type,\n      name: this.label,\n      ...exportObj\n    };\n\n    if (-1 === actionIndex) {\n      window.jetFormActionTypes.push(actionData);\n    } else {\n      window.jetFormActionTypes[actionIndex] = { ...window.jetFormActionTypes[actionIndex],\n        ...exportObj\n      };\n    }\n\n    return exportObj;\n  }\n\n  exportLabels() {\n    return this.getLocalizedWithFunc('__labels', '[Empty Label]');\n  }\n\n  exportHelp() {\n    return this.getLocalizedWithFunc('__help_messages');\n  }\n\n  exportGatewayAttrs() {\n    return this.getLocalizedWithFunc('__gateway_attrs', []);\n  }\n\n  exportMessages() {\n    return this.getLocalizedWithFunc('__messages', {});\n  }\n\n  getLocalizedWithFunc(objectKey, ifEmptyReturn = '') {\n    let action = false;\n\n    if (objectKey in this) {\n      action = this[objectKey];\n    }\n\n    if (!action) {\n      return () => ifEmptyReturn;\n    }\n\n    return attr => {\n      if (attr) {\n        return action[attr] ? action[attr] : ifEmptyReturn;\n      } else {\n        return action;\n      }\n    };\n  }\n\n}\n\n/* harmony default export */ var actions_EditorData = (EditorData);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/engine-editor/JetFormEditorRow.vue?vue&type=template&id=23ff7180&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"jet-form-editor__row\" }, [\n    _c(\"div\", { class: _vm.labelClassObject }, [\n      _vm._v(\"\\n\\t\\t\" + _vm._s(_vm.label) + \"\\n\\t\\t\"),\n      this.$slots.helpLabel\n        ? _c(\"div\", { class: _vm.helpClassObject }, [_vm._t(\"helpLabel\")], 2)\n        : _vm._e()\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { class: _vm.controlClassObject },\n      [\n        _vm._t(\"default\"),\n        _vm._v(\" \"),\n        this.$slots.helpControl\n          ? _c(\n              \"div\",\n              { class: _vm.helpClassObject },\n              [_vm._t(\"helpControl\")],\n              2\n            )\n          : _vm._e()\n      ],\n      2\n    ),\n    _vm._v(\" \"),\n    this.$slots.helpSide\n      ? _c(\n          \"div\",\n          { class: _vm.helpClassObject },\n          [_vm._v(\"\\n\\t\\t    \"), _vm._t(\"helpSide\")],\n          2\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./src/engine-editor/JetFormEditorRow.vue?vue&type=template&id=23ff7180&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/engine-editor/JetFormEditorRow.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ var JetFormEditorRowvue_type_script_lang_js_ = ({\n  name: 'jet-form-editor-row',\n  props: {\n    label: {\n      type: String,\n      default: ''\n    },\n    labelClass: {\n      type: String,\n      default: ''\n    },\n    helpClass: {\n      type: String,\n      default: ''\n    },\n    controlClass: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    labelClassObject() {\n      return this.getClass('defaultLabelClass', 'labelClass');\n    },\n\n    helpClassObject() {\n      return this.getClass('defaultHelpClass', 'helpClass');\n    },\n\n    controlClassObject() {\n      return this.getClass('defaultControlClass', 'controlClass');\n    }\n\n  },\n\n  data() {\n    return {\n      defaultLabelClass: 'jet-form-editor__row-label',\n      defaultHelpClass: 'jet-form-editor__row-notice',\n      defaultControlClass: 'jet-form-editor__row-control'\n    };\n  },\n\n  methods: {\n    getClass(defaultKey, propKey) {\n      return {\n        [`${this[defaultKey]} ${this[propKey]}`]: this[propKey],\n        [this[defaultKey]]: !this[propKey]\n      };\n    }\n\n  }\n});\n// CONCATENATED MODULE: ./src/engine-editor/JetFormEditorRow.vue?vue&type=script&lang=js&\n /* harmony default export */ var engine_editor_JetFormEditorRowvue_type_script_lang_js_ = (JetFormEditorRowvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/engine-editor/JetFormEditorRow.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  engine_editor_JetFormEditorRowvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/engine-editor/JetFormEditorRow.vue\"\n/* harmony default export */ var JetFormEditorRow = (component.exports);\n// CONCATENATED MODULE: ./src/main.js\n\n\nconst Actions = {\n  EditorData: actions_EditorData\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);